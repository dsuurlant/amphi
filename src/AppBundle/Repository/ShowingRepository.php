<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Showing;
use AppBundle\Entity\Ticket;

/**
 * ShowingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ShowingRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Get showings in specified timeframe.
     *
     * @param \DateTime $startDate The start date.
     * @param \DateTime $endDate The end date.
     *
     * @return array List of showings between specified dates.
     */
    public function getShowingsBetween(\DateTime $startDate, \DateTime $endDate)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder()
                 ->select('s')
                 ->from('AppBundle:Showing', 's')
                 ->where('s.showDateTime >= :startDate')
                 ->andWhere('s.showDateTime <= :endDate')
                 ->orderBy('s.showDateTime', 'ASC')
                 ->setParameter('startDate', $startDate)
                 ->setParameter('endDate', $endDate)
                 ->setFirstResult(0)
                 ->setMaxResults(25); // @TODO pagination

        $q = $qb->getQuery();

        return $q->getResult();
    }

    /**
     * Get future showings.
     *
     * @return array
     */
    public function getFutureShowings()
    {
        $now = new \DateTime('now');

        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder()
                 ->select('s')
                 ->from('AppBundle:Showing', 's')
                 ->where('s.showDateTime > :now')
                 ->orderBy('s.showDateTime', 'ASC')
                 ->setParameter('now', $now);

        $q = $qb->getQuery();

        return $q->getResult();
    }


    public function generateTicketsForShowing(Showing $showing)
    {
        $manager      = $this->getEntityManager();
        $priceRepo    = $this->getEntityManager()->getRepository('AppBundle:Price');
        $showingPrice = 0.00;
        $showHour     = (int)$showing->getShowDateTime()->format('G');
        if ($showHour < 12) {
            $showingPrice += $priceRepo->getPriceFor('Morning');
        } else if ($showHour >= 12 && $showHour < 18) {
            $showingPrice += $priceRepo->getPriceFor('Matinee');
        } else if ($showHour >= 18 && $showHour < 24) {
            $showingPrice += $priceRepo->getPriceFor('Evening');
        }

        $showType     = $showing->getTheater()->getTheaterType()->getFilmFormat()->getName();
        $showingPrice += $priceRepo->getPriceFor($showType);

        $seats = $showing->getTheater()->getSeats();
        /* @var $seat \AppBundle\Entity\Seat */
        foreach ($seats as $seat) {
            $seatType  = $seat->getSeatType();
            $seatPrice = $priceRepo->getPriceFor($seatType);

            $ticket = new Ticket();
            $ticket->setSeat($seat);
            $ticket->setPrice($showingPrice + $seatPrice);
            $ticket->setShowing($showing);
            $ticket->setIsPaid(false);
            $ticket->setIsReserved(false);
            $manager->persist($ticket);
        }
    }
}
